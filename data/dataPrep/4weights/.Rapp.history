Optimization constraints:#
l <- 0.2 # lower constraint value#
u <- 5 # upper constraint value#
#
# Plot CDFs Function:#
cdf_plot = function(cdf,Y) {#
	plot(cdf, type="l", lwd=3, axes=F, ann=F, ylim=c(0,1), xlim=c(0,max(cdf$x)), xaxs="i", yaxs="i"); axis(1, cex.axis=1.5, col="gray", col.axis="grey42"); axis(2, las=2, cex.axis=1.5, col="gray", col.axis="grey42")#
	#find median#
	med=max(which(cdf$y<=0.50))#
	sample_median = round(cdf$x[med], 0)#
	abline(v=sample_median, col="black", lty=5)#
	lines(cdf$x, Y, col="red", lwd=3)#
	#find median#
	med=max(which(Y<=0.50))#
	sample_median = round(cdf$x[med], 0)#
	abline(v=sample_median, col="red", lty=5)#
}#
#
##### Objective function for finding optimal weights#
ob_func = function(W, age_X, inc_X, y1_p, y2_p) {#
	# Weighted CDF is X*W/sum(W):#
	y1_s <- age_X%*%W/sum(W)#
	y2_s <- inc_X%*%W/sum(W)#
	# calculate error#
	y1_err = sum((y1_p - y1_s)^2)#
	y2_err = sum((y2_p - y2_s)^2)#
	err = y1_err + y2_err#
	return(err)#
}#
#
###########################
#	CHINA OPTIMIZATION   ##
###########################
#
# READ IN DATA#
age_p <- as.matrix(read.csv(file="./data/china_cars/age.csv", header=F))#
inc_p <- as.matrix(read.csv(file="./data/china/income.csv", header=F))#
data <- read.csv(file="./data/demo_data_coded.csv", header=T)
dim(data)
Screen out Beijing Data & SUV buyers - China only:#
data <- data[-which(data$usa==0 & data$shanghai==0 & data$shenzhen==0 & data$chengdu==0),]#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==0),]
dim(data)
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out Beijing Data & SUV buyers - China only:#
data <- data[-which(data$usa==0 & data$shanghai==0 & data$shenzhen==0 & data$chengdu==0),]#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==0),]
weights <- read.table(file="./china_car_weights_0.2.txt")
weights <- read.table(file="./weights/china_car_weights_0.2.txt")
weights
length(weights)
dim(weights)
dim(data)
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out Beijing Data & SUV buyers - China only:#
data <- data[-which(data$usa==0 & data$shanghai==0 & data$shenzhen==0 & data$chengdu==0),]#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==0),]#
#
weights <- read.table(file="./weights/china_car_weights_0.2.txt")
mean(data$age)
mean(data$income)
sd(data$age)
sd(data$income)
mean(data$age*weights)
dim(data$age)
matrix(data$age)
mean(matrix(data$age)*weights)
data$age*weights
mean(data$age*weights)
nrow(weights)
data$age*weights
weighted.mean(data$age,weights)
length(data$age)
nrow(weights)
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out Beijing Data & SUV buyers - China only:#
data <- data[-which(data$usa==0 & data$shanghai==0 & data$shenzhen==0 & data$chengdu==0),]#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==0),]#
#
weights <- as.numeric(read.table(file="./weights/china_car_weights_0.2.txt"))
weights <- (read.table(file="./weights/china_car_weights_0.2.txt")
weights <- read.table(file="./weights/china_car_weights_0.2.txt")
weights
weights <- as.numeric(weights)
weights <- as.vector(weights)
weights
weighted.mean(data$age,weights)
weights <- numeric(weights)
dim(weights)
length(demo_data)
length(demo$age)
length(data$age)
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out Beijing Data & SUV buyers - China only:#
data <- data[-which(data$usa==0 & data$shanghai==0 & data$shenzhen==0 & data$chengdu==0),]#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==0),]#
#
w <- read.table(file="./weights/china_car_weights_0.2.txt")#
#
mean(data$age)#
mean(data$income)#
sd(data$age)#
sd(data$income)#
weighted.mean(data$age,w)
class(w)
w <- as.matrix(read.table(file="./weights/china_car_weights_0.2.txt"))
w
weighted.mean(data$age,w)
weighted.mean(data$income,w)
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out Beijing Data & SUV buyers - China only:#
data <- data[-which(data$usa==0 & data$shanghai==0 & data$shenzhen==0 & data$chengdu==0),]#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==0),]#
#
w <- as.matrix(read.table(file="./weights/china_car_weights_0.2.txt"))#
#
mean(data$age)#
mean(data$income)#
sd(data$age)#
sd(data$income)#
weighted.mean(data$age,w)#
weighted.mean(data$income,w)
weighted.sd(data$age,w)
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out SUV buyers - USA only:#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==1),]#
#
w <- as.matrix(read.table(file="./weights/us_car_weights_0.2.txt"))#
#
mean(data$age)#
mean(data$income)#
sd(data$age)#
sd(data$income)#
weighted.mean(data$age,w)#
weighted.mean(data$income,w)
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out Beijing Data & SUV buyers - China only:#
data <- data[-which(data$usa==0 & data$shanghai==0 & data$shenzhen==0 & data$chengdu==0),]#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==0),]#
#
w <- as.matrix(read.table(file="./weights/china_car_weights_0.2.txt"))#
#
mean(data$age)#
mean(data$income)#
sd(data$age)#
sd(data$income)#
weighted.mean(data$age,w)#
weighted.mean(data$income,w)
dim(data)
length(which(data$children==0))
208/nrow(data)
length(which(data$female==0))
268/nrow(data)
1-268/nrow(data)
length(which(data$married==0))
length(which(data$marriage==0))
1-189/nrow(data)
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out SUV buyers - USA only:#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==1),]
length(which(data$children==0))
263/nrow(data)
length(which(data$female==0))
1-244/nrow(data)
length(which(data$marriage==0))
1-24/nrow(data)
1-204/nrow(data)
data <- read.csv(file="./data/demo_data_coded.csv", header=T)
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out Beijing Data & SUV buyers - China only:#
data <- data[-which(data$usa==0 & data$shanghai==0 & data$shenzhen==0 & data$chengdu==0),]#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==0),]
cdata=data
dim(cdata)
READ IN DATA#
age_p <- as.matrix(read.csv(file="./data/us/age.csv", header=F))#
inc_p <- as.matrix(read.csv(file="./data/us/income_trunk.csv", header=F))#
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out SUV buyers - USA only:#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==1),]
udata=data
dim(udata)
cw <- read.table(file="./weights/china_car_weights_0.2.txt")
cw
uw <- read.table(file="./weights/us_car_weights_0.2.txt")
uw
cdata$income
cw*cdata$income
sum(cw*cdata$income)/sum(weight)
sum(cw*cdata$income)/sum(cw)
sum(cw*cdata$income)/sum(cdata$income)
weighted.mean(cdata$income,cw)
length(cdata$income)
length(cw)
clas(cw)
class(cw)
cw <- as.matrix(cw)
cw
class(cdata$income)
weighted.mean(cdata$income,cw)
sum(cw*cdata$income)/sum(cdata$income)
sum(cw*cdata$income)/sum(cw)
sum(cw*cdata$age)/sum(cw)
weighted.mean(cdata$age,cw)
weighted.mean(cdata$children,cw)
weighted.mean(cdata$age,cw)
cdata$children
cdata$children[-is.nat(cdata$children)]
cdata$children[-is.na(cdata$children)]
cdata[-is.na(cdata$children),]$children
cdata[-which(is.na(cdata$children)==T),]$children
mean(cdata[-which(is.na(cdata$children)==T),]$children)
mu <- mean(cdata[-which(is.na(cdata$children)==T),]$children)
mu
cdata[which(is.na(cdata$children)==T),]$children
mu <- mean(cdata[-which(is.na(cdata$children)==T),]$children)#
cdata[which(is.na(cdata$children)==T),]$children <- mu
cdata$children
weighted.mean(cdata$childre, cw)
cw
weighted.mean(cdata$children, cw)
weighted.mean(cdata$householdsize, cw)
mu <- mean(udata[-which(is.na(udata$children)==T),]$children)
mu
udata[which(is.na(udata$children)==T),]$children <- mu
weighted.mean(cdata$householdsize, cw)
weighted.mean(udata$householdsize, uw)
uw<-as.matrix(uw)
uw
weighted.mean(udata$householdsize, uw)
mu <- mean(udata[-which(is.na(udata$children)==T),]$children)#
udata[which(is.na(udata$children)==T),]$children <- mu
udata$children
weighted.mean(udata$children, uw)
READ IN DATA#
age_p <- as.matrix(read.csv(file="./data/us/age.csv", header=F))#
inc_p <- as.matrix(read.csv(file="./data/us/income_trunk.csv", header=F))#
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out SUV buyers - USA only:#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==1),]
udata<-data
udata$children
weighted.mean(udata$children, uw)
mu <- mean(udata[-which(is.na(udata$children)==T),]$children)
mu
which(is.na(udata$children)==T)
udata[which(is.na(udata$children)==T),]$children <- mu
weighted.mean(udata$children, uw)
weighted.mean(udata$householdsize, uw)
mu <- mean(udata[-which(is.na(udata$householdsize)==T),]$householdsize)
mu
udata[which(is.na(udata$householdsize)==T),]$householdsize <- mu
weighted.mean(udata$householdsize, uw)
READ IN DATA#
age_p <- as.matrix(read.csv(file="./data/us/age.csv", header=F))#
inc_p <- as.matrix(read.csv(file="./data/us/income_trunk.csv", header=F))#
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out SUV buyers - USA only:#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==1),]
uw <- read.table(file="./weights/us_car_weights_0.2.txt")
uw
uw<-as.matrix(uw)
weighted.mean(data$income,uw)
mean(age_p)
inc_p <- as.matrix(read.csv(file="./data/us/income_trunk.csv", header=F))
incp_p
inc_p
READ IN DATA#
age_p <- as.matrix(read.csv(file="./data/us/age.csv", header=F))#
inc_p <- as.matrix(read.csv(file="./data/us/income_trunk.csv", header=F))#
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out SUV buyers - USA only:#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==1),]#
#
# MTurk Only:#
# data <- data[which(data$mturk==1),]#
#
# PIT Only:#
# data <- data[which(data$mturk==0),]#
#
# URBAN Only:#
# data <- data[which(data$urban==1),]#
#
# SUBURBAN Only:#
# data <- data[which(data$suburban==1),]#
#
# RURAL Only:#
# data <- data[which(data$urban==0 & data$suburban==0),]#
#
# POPULATION DATA#
n = 1000#
age_p_cdf <- spline(age_p[,1], age_p[,3], n=n)#
inc_p_cdf <- spline(inc_p[,1], inc_p[,3], n=n)#
#
for (i in 2:nrow(age_p)) {#
	for (j in 1:length(age_p_cdf$x)) {#
		if (age_p_cdf$x[j] < age_p[(i),1] & age_p_cdf$x[j] >= age_p[i-1,1]) {#
			age_p_cdf$y[j] = age_p[i-1,3]#
		}#
	}#
}#
for (i in 2:nrow(inc_p)) {#
	for (j in 1:length(inc_p_cdf$x)) {#
		if (inc_p_cdf$x[j] < inc_p[(i),1] & inc_p_cdf$x[j] >= inc_p[i-1,1]) {#
			inc_p_cdf$y[j] = inc_p[i-1,3]#
		}#
	}#
}#
#
age_p_x <- age_p_cdf$x#
age_p_y <- age_p_cdf$y#
inc_p_x <- inc_p_cdf$x#
inc_p_y <- inc_p_cdf$y#
#
# SAMPLE DATA#
age_s_x <- data$age#
inc_s_x <- data$income#
N = length(age_s_x)
te cdf matrix for age and income#
age_X <- matrix(data=0,nrow=length(age_p_x),ncol=N)#
inc_X <- matrix(data=0,nrow=length(inc_p_x),ncol=N)#
for (i in 1:length(age_p_cdf$x)) {#
	age_X[i,which(age_s_x <= age_p_x[i])] <- 1#
	inc_X[i,which(inc_s_x <= inc_p_x[i])] <- 1#
}#
#
# Initialize weights vector#
W <- matrix(rep(1, N,ncol=1))#
#
# RUN OPTIMIZATION WITH CONSTRAINTS#
lb <- matrix(rep(l,N),ncol=1) # lower constraints#
ub <- matrix(rep(u,N),ncol=1) # upper constraints#
#
out <- optim(W, fn=ob_func, method="L-BFGS-B", control=list(trace=TRUE, REPORT=1, maxit=300), lower=lb, upper=ub, age_X=age_X, inc_X=inc_X, y1_p=age_p_y, y2_p=inc_p_y)#
#
W_hat <- out$par#
err_hat <- out$value#
#
# Weighted CDF is simply X*W/sum(W):#
age_s_y <- age_X%*%W/sum(W)#
inc_s_y <- inc_X%*%W/sum(W)#
age_s_y_W <- age_X%*%W_hat/sum(W_hat)#
inc_s_y_W <- inc_X%*%W_hat/sum(W_hat)
inc_p
plot(inc_p[,1],inc_p[,2])
plot(inc_p[,1],inc_p[,3])
weighted.mean(inc_p[,1],inc_p[,3])
weighted.mean(inc_p[,1],inc_p[,2])
Optimization constraints:#
l <- 0.2 # lower constraint value#
u <- 5 # upper constraint value#
#
# Plot CDFs Function:#
cdf_plot = function(cdf,Y) {#
	plot(cdf, type="l", lwd=3, axes=F, ann=F, ylim=c(0,1), xlim=c(0,max(cdf$x)), xaxs="i", yaxs="i"); axis(1, cex.axis=1.5, col="gray", col.axis="grey42"); axis(2, las=2, cex.axis=1.5, col="gray", col.axis="grey42")#
	#find median#
	med=max(which(cdf$y<=0.50))#
	sample_median = round(cdf$x[med], 0)#
	abline(v=sample_median, col="black", lty=5)#
	lines(cdf$x, Y, col="red", lwd=3)#
	#find median#
	med=max(which(Y<=0.50))#
	sample_median = round(cdf$x[med], 0)#
	abline(v=sample_median, col="red", lty=5)#
}#
#
##### Objective function for finding optimal weights#
ob_func = function(W, age_X, inc_X, y1_p, y2_p) {#
	# Weighted CDF is X*W/sum(W):#
	y1_s <- age_X%*%W/sum(W)#
	y2_s <- inc_X%*%W/sum(W)#
	# calculate error#
	y1_err = sum((y1_p - y1_s)^2)#
	y2_err = sum((y2_p - y2_s)^2)#
	err = y1_err + y2_err#
	return(err)#
}
USA OPTIMIZATION   ##
#########################
#
# READ IN DATA#
age_p <- as.matrix(read.csv(file="./data/us/age.csv", header=F))#
inc_p <- as.matrix(read.csv(file="./data/us/income_trunk.csv", header=F))#
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out SUV buyers - USA only:#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==1),]#
#
# MTurk Only:#
# data <- data[which(data$mturk==1),]#
#
# PIT Only:#
# data <- data[which(data$mturk==0),]#
#
# URBAN Only:#
# data <- data[which(data$urban==1),]#
#
# SUBURBAN Only:#
# data <- data[which(data$suburban==1),]#
#
# RURAL Only:#
# data <- data[which(data$urban==0 & data$suburban==0),]#
#
# POPULATION DATA#
n = 1000#
age_p_cdf <- spline(age_p[,1], age_p[,3], n=n)#
inc_p_cdf <- spline(inc_p[,1], inc_p[,3], n=n)#
#
for (i in 2:nrow(age_p)) {#
	for (j in 1:length(age_p_cdf$x)) {#
		if (age_p_cdf$x[j] < age_p[(i),1] & age_p_cdf$x[j] >= age_p[i-1,1]) {#
			age_p_cdf$y[j] = age_p[i-1,3]#
		}#
	}#
}#
for (i in 2:nrow(inc_p)) {#
	for (j in 1:length(inc_p_cdf$x)) {#
		if (inc_p_cdf$x[j] < inc_p[(i),1] & inc_p_cdf$x[j] >= inc_p[i-1,1]) {#
			inc_p_cdf$y[j] = inc_p[i-1,3]#
		}#
	}#
}#
#
age_p_x <- age_p_cdf$x#
age_p_y <- age_p_cdf$y#
inc_p_x <- inc_p_cdf$x#
inc_p_y <- inc_p_cdf$y#
#
# SAMPLE DATA#
age_s_x <- data$age#
inc_s_x <- data$income#
N = length(age_s_x)#
#
# create cdf matrix for age and income#
age_X <- matrix(data=0,nrow=length(age_p_x),ncol=N)#
inc_X <- matrix(data=0,nrow=length(inc_p_x),ncol=N)#
for (i in 1:length(age_p_cdf$x)) {#
	age_X[i,which(age_s_x <= age_p_x[i])] <- 1#
	inc_X[i,which(inc_s_x <= inc_p_x[i])] <- 1#
}#
#
# Initialize weights vector#
W <- matrix(rep(1, N,ncol=1))
cdf_plot(c_age_p_cdf, c_age_s_y)
weighted.mean(inc_p[,1],inc_p[,3])
weighted.mean(inc_p[,1],inc_p[,2])
weighted.mean(age_p[,1],age_p[,2])
mean(age_p[,1])
sd(age_p[,1])
sd(inc_p[,1])
READ IN DATA#
age_p <- as.matrix(read.csv(file="./data/china_cars/age.csv", header=F))#
inc_p <- as.matrix(read.csv(file="./data/china/income.csv", header=F))#
data <- read.csv(file="./data/demo_data_coded.csv", header=T)
weighted.mean(inc_p[,1],inc_p[,2])
weighted.mean(age_p[,1],age_p[,2])
sd(age_p[,1])
sd(inc_p[,1])
Optimization constraints:#
l <- 0.2 # lower constraint value#
u <- 5 # upper constraint value#
#
# Plot CDFs Function:#
cdf_plot = function(cdf,Y) {#
	plot(cdf, type="l", lwd=3, axes=F, ann=F, ylim=c(0,1), xlim=c(0,max(cdf$x)), xaxs="i", yaxs="i"); axis(1, cex.axis=1.5, col="gray", col.axis="grey42"); axis(2, las=2, cex.axis=1.5, col="gray", col.axis="grey42")#
	#find median#
	med=max(which(cdf$y<=0.50))#
	sample_median = round(cdf$x[med], 0)#
	abline(v=sample_median, col="black", lty=5)#
	lines(cdf$x, Y, col="red", lwd=3)#
	#find median#
	med=max(which(Y<=0.50))#
	sample_median = round(cdf$x[med], 0)#
	abline(v=sample_median, col="red", lty=5)#
}#
#
##### Objective function for finding optimal weights#
ob_func = function(W, age_X, inc_X, y1_p, y2_p) {#
	# Weighted CDF is X*W/sum(W):#
	y1_s <- age_X%*%W/sum(W)#
	y2_s <- inc_X%*%W/sum(W)#
	# calculate error#
	y1_err = sum((y1_p - y1_s)^2)#
	y2_err = sum((y2_p - y2_s)^2)#
	err = y1_err + y2_err#
	return(err)#
}#
#
###########################
#	CHINA OPTIMIZATION   ##
###########################
#
# READ IN DATA#
age_p <- as.matrix(read.csv(file="./data/china_cars/age.csv", header=F))#
inc_p <- as.matrix(read.csv(file="./data/china/income.csv", header=F))#
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out Beijing Data & SUV buyers - China only:#
data <- data[-which(data$usa==0 & data$shanghai==0 & data$shenzhen==0 & data$chengdu==0),]#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==0),]#
#
# POPULATION DATA#
n = 1000#
age_p_cdf <- spline(age_p[,1], age_p[,3], n=n)#
inc_p_cdf <- spline(inc_p[,1], inc_p[,3], n=n)#
#
for (i in 2:nrow(age_p)) {#
	for (j in 1:length(age_p_cdf$x)) {#
		if (age_p_cdf$x[j] < age_p[(i),1] & age_p_cdf$x[j] >= age_p[i-1,1]) {#
			age_p_cdf$y[j] = age_p[i-1,3]#
		}#
	}#
}#
for (i in 2:nrow(inc_p)) {#
	for (j in 1:length(inc_p_cdf$x)) {#
		if (inc_p_cdf$x[j] < inc_p[(i),1] & inc_p_cdf$x[j] >= inc_p[i-1,1]) {#
			inc_p_cdf$y[j] = inc_p[i-1,3]#
		}#
	}#
}#
#
age_p_x <- age_p_cdf$x#
age_p_y <- age_p_cdf$y#
inc_p_x <- inc_p_cdf$x#
inc_p_y <- inc_p_cdf$y#
#
# SAMPLE DATA#
age_s_x <- data$age#
inc_s_x <- data$income#
N = length(age_s_x)
age_p_x
age_p_y
age_p_x
weighted.mean(age_p_x[,1],age_p_y[,2])
weighted.mean(age_p_x,age_p_y)
plot(age_p_x,age_p_y)
median(age_p_x)
mean(age_p_x)
age_p <- as.matrix(read.csv(file="./data/us/age.csv", header=F))#
inc_p <- as.matrix(read.csv(file="./data/us/income_trunk.csv", header=F))#
data <- read.csv(file="./data/demo_data_coded.csv", header=T)#
#
# Screen out SUV buyers - USA only:#
data <- data[which(data$SUVbuyer==0),]#
data <- data[which(data$usa==1),]
weighted.mean(age_p[,1],age_p[,2])
